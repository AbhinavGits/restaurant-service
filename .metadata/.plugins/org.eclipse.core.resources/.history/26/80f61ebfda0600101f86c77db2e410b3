package com.abhinav.intrvw.coding;

import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.Function;
import java.util.stream.Collectors;

public class DuplicatesInList {

	public static void main(String[] args) {
		List<Integer> numbers = Arrays.asList(10, 25, 20, 5, 30, 25, 30, 20);
		
		Set<Integer> unique = new HashSet<Integer>();
		
		List<Integer> collect = numbers.stream().filter(s -> !unique.add(s)).collect(Collectors.toList());
		
		System.out.println(collect);
		
		Map<Integer, Long> collect2 = numbers.stream().collect(Collectors.groupingBy(Function.identity(),Collectors.counting()));
		
		List<Integer> collect3 = collect2.entrySet().stream().filter(entry-> entry.getValue() >1).map(Map.Entry::getKey).collect(Collectors.toList());
	}
}
